name: Regenerate README file

on:
  workflow_call:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  regenerate-readme:
    name: Regenerate README.md file
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'wp-cli' && ! contains(fromJson('[".github", "wp-cli", "wp-cli-bundle", "wp-super-cache-cli", "php-cli-tools", "wp-config-transformer", "wp-cli.github.com"]'), github.event.repository.name) }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set up PHP envirnoment
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"

      - name: Check existence of composer.json file
        id: check_composer_file
        uses: andstor/file-existence-action@v2
        with:
          files: composer.json

      - name: Install Composer dependencies & cache dependencies
        if: ${{ steps.check_composer_file.outputs.files_exists == 'true' }}
        env:
          COMPOSER_ROOT_VERSION: dev-${{ github.event.repository.default_branch }}
        uses: ramsey/composer-install@v2
        with:
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: |
            $(date --utc "+%Y-%m")

      - name: Configure git user
        run: |
          git config --global user.email "alain.schlesser@gmail.com"
          git config --global user.name "Alain Schlesser"

      - name: Check if remote branch exists
        id: check_remote_branch
        run: >
          echo "exists=$(git ls-remote --exit-code --heads origin regenerate-readme &>/dev/null
            && echo "true" || echo "false")" >>"${GITHUB_OUTPUT}"
        
      - name: Create branch to base pull request on
        if: ${{ steps.check_remote_branch.outputs.exists == 'false' }}
        run: |
          git checkout -b regenerate-readme

      - name: Fetch existing branch to add commits to
        if: ${{ steps.check_remote_branch.outputs.exists == 'true' }}
        run: |
          git fetch --all --prune
          git checkout regenerate-readme
          git pull --no-rebase

      - name: Install WP-CLI nightly
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli-nightly.phar
          sudo mv --verbose wp-cli-nightly.phar /usr/local/bin/wp
          sudo chmod +x /usr/local/bin/wp

      - name: Regenerate README.md file
        run: |
          wp package install "wp-cli/scaffold-package-command:^2"
          wp scaffold package-readme --branch=${{ github.event.repository.default_branch }} --force .

      - name: Check if there are changes
        id: check_changes
        run: >
          echo "detected=$(test -n "$(git status --porcelain 2>/dev/null)"
            && echo "true" || echo "false")" >>"${GITHUB_OUTPUT}"

      - name: Commit changes
        if: ${{ steps.check_changes.outputs.detected == 'true' }}
        run: |
          git add README.md
          git commit -m "Regenerate README file - $(date +'%Y-%m-%d')"
          git push origin regenerate-readme

      - name: Create pull request
        if: >
          ${{ steps.check_changes.outputs.detected == 'true'
            && steps.check_remote_branch.outputs.exists == 'false' }}
        uses: repo-sync/pull-request@v2
        with:
          source_branch: regenerate-readme
          destination_branch: ${{ github.event.repository.default_branch }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: Regenerate README file
          pr_body: |
            **This is an automated pull-request**
            
            Refreshes the `README.md` file with the latest changes to the docblocks in the source code.
          pr_reviewer: schlessera
          pr_label: scope:documentation
